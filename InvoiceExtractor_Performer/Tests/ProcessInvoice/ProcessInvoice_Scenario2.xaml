<Activity mc:Ignorable="sap sap2010" x:Class="ProcessInvoice_Scenario2" this:ProcessInvoice_Scenario2.in_strVendorName="AUTOTECH SUPPLIES" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Data;assembly=Studio.Generated.TypedDataTable3" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:this="clr-namespace:" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugade="clr-namespace:UiPath.GSuite.Activities.Drive.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugam="clr-namespace:UiPath.GSuite.Activities.Models;assembly=UiPath.GSuite.Activities" xmlns:ugfm="clr-namespace:UiPath.GSuite.Forms.Models;assembly=UiPath.GSuite" xmlns:ugsm="clr-namespace:UiPath.GSuite.Sheets.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umae="clr-namespace:UiPath.Mail.Activities.Enums;assembly=UiPath.Mail.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umm="clr-namespace:UiPath.MicrosoftOffice365.Models;assembly=UiPath.MicrosoftOffice365" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.Mail.Activities" xmlns:usau1="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:usau2="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strVendorName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessInvoice_Scenario2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Enums</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365</x:String>
      <x:String>UiPath.GSuite.Activities.Models</x:String>
      <x:String>UiPath.GSuite.Forms.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Sdk.Activities</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection.Contracts</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite.Sheets.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow1</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow2</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable3</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessInvoice_Scenario2" sap:VirtualizedContainerService.HintSize="1252,925.04" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="folderExists" />
      <Variable x:TypeArguments="sd:DataTable" Name="Vendors" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="ui:QueueItem" Default="[new QueueItem]" Name="TransactionItem" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Emails" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InitAllSettings - Invoke Workflow File (Framework\InitAllSettings.xaml)" sap:VirtualizedContainerService.HintSize="434,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile" />
          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets" />
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_VendorFile" />
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Vendors">[Vendors]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Test email" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="434,178" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Test email &quot;+ in_strVendorName]" To="rpa-project@outlook.com" UseISConnection="True">
        <ui:SendOutlookMail.ConnectionDetailsBackupSlot>
          <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="{x:Null}">
            <usau:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="umae:ConnectionDetails, scg:List(x:Object)" />
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </ui:SendOutlookMail.ConnectionDetailsBackupSlot>
        <ui:SendOutlookMail.Files>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
        </ui:SendOutlookMail.Files>
      </ui:SendOutlookMail>
      <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Delay_1" />
      <ui:GetOutlookMailMessages Filter="{x:Null}" FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="rpa-project@outlook.com" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="434,57" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[Emails]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1" UseISConnection="True">
        <ui:GetOutlookMailMessages.ConnectionDetailsBackupSlot>
          <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="{x:Null}">
            <usau:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="umae:ConnectionDetails, scg:List(x:Object)" />
            </usau:BackupSlot.BackupValues>
          </usau:BackupSlot>
        </ui:GetOutlookMailMessages.ConnectionDetailsBackupSlot>
      </ui:GetOutlookMailMessages>
      <Assign sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[TransactionItem.SpecificContent]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" xml:space="preserve">[New Dictionary(Of String, Object) From {
    {"Email ID",  Emails(0).Headers("Message-ID")} ,
	{"Vendor Name" , in_strVendorName},
	{"Invoice Number" , "200"} ,
	{"Invoice Date", "06/01/2025" },
	{"Due Date" , "06/02/2025"},
	{"Vendor Adress" , "SUSPENSION123 MAIN STREET, DETROIT, MI"},
	{"Billing Address" , "MOTO SERBESTI STRADA SALCAMULUI, NR 11"},
	{"Shipping Address" , "STRADA VALEA LUNGA, NR 35"},
	{"Total Amount", "285.6" },
	{"VAT" , "45.6"},
	{"OrderedItems" , "Brake Caliper x 2; Oil x 4; Brake Pad x 4;"}
}]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProcessInvoice_mock_1 - Invoke Workflow File (Mocks\Components\ProcessInvoice_mock_1.xaml)" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Mocks\Components\ProcessInvoice_mock_1.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Vendors">[Vendors]</InArgument>
          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="SubfolderPath" />
        <Variable x:TypeArguments="scg:List(umm:Office365Message)" Name="EmailsList" />
        <Variable x:TypeArguments="ugfm:GFormInfo" Name="FormInfo" />
        <Variable x:TypeArguments="sd1:DataTable3" Name="Results" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[SubfolderPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["Invoices\"+in_strVendorName]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim outlookApp As New Microsoft.Office.Interop.Outlook.Application&#xA;Dim outlookNs As Microsoft.Office.Interop.Outlook.NameSpace = outlookApp.GetNamespace(&quot;MAPI&quot;)&#xA;&#xA;Try&#xA;    Console.WriteLine(&quot;Checking folder path: &quot; &amp; folderToCheck)&#xA;&#xA;    ' Always start from the desired mailbox&#xA;    Dim mainMailbox = outlookNs.Folders.Item(&quot;rpa-project@outlook.com&quot;)&#xA;&#xA;    Dim pathParts = folderToCheck.Split({&quot;\&quot;}, StringSplitOptions.RemoveEmptyEntries)&#xA;    Dim currentFolder As Microsoft.Office.Interop.Outlook.MAPIFolder = mainMailbox&#xA;&#xA;    Console.WriteLine(&quot;Starting from mailbox: &quot; &amp; mainMailbox.Name)&#xA;&#xA;    For Each part As String In pathParts&#xA;        Dim found As Boolean = False&#xA;        Console.WriteLine(&quot;Looking inside: &quot; &amp; currentFolder.FolderPath)&#xA;&#xA;        For Each subFolder As Microsoft.Office.Interop.Outlook.MAPIFolder In currentFolder.Folders&#xA;            Console.WriteLine(&quot; → Subfolder found: &quot; &amp; subFolder.Name)&#xA;            If subFolder.Name.Equals(part, StringComparison.InvariantCultureIgnoreCase) Then&#xA;                currentFolder = subFolder&#xA;                Console.WriteLine(&quot; ✔ Match found: &quot; &amp; subFolder.Name)&#xA;                found = True&#xA;                Exit For&#xA;            End If&#xA;        Next&#xA;&#xA;        If Not found Then&#xA;            Console.WriteLine(&quot; ✘ Folder not found: &quot; &amp; part)&#xA;            folderExists = False&#xA;            Return&#xA;        End If&#xA;    Next&#xA;&#xA;    Console.WriteLine(&quot; ✅ Folder exists: &quot; &amp; currentFolder.FolderPath)&#xA;    folderExists = True&#xA;&#xA;Catch ex As Exception&#xA;    Console.WriteLine(&quot; ❌ Exception: &quot; &amp; ex.Message)&#xA;    folderExists = False&#xA;End Try&#xA;&#xA;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="folderToCheck">[SubfolderPath]</InArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="folderExists">[folderExists]</OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <umam:GetEmailListConnections BrowserFolder="{x:Null}" BrowserFolderId="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" Filter="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" FreeTextFilter="{x:Null}" Mailbox="{x:Null}" AuthScopesInvalid="False" BodyAsHtml="False" ConnectionId="310afcfe-1585-4e31-aaf9-c92efc34995f" DisplayName="Get Email List" EmailList="[EmailsList]" FilterSelectionMode="ConditionBuilder" sap:VirtualizedContainerService.HintSize="434,281" sap2010:WorkflowViewState.IdRef="GetEmailListConnections_1" Importance="Any" IncludeSubfolders="False" ManualEntryFolder="[SubfolderPath]" MarkAsRead="False" MaxResults="1" OrderByDate="NewestFirst" SelectionMode="EnterPath" UnreadOnly="False" UseConnectionService="True" UseSharedMailbox="False" WithAttachmentsOnly="False">
        <umam:GetEmailListConnections.FilterSelectionBackup>
          <usau1:BackupSlot x:TypeArguments="umame:FilterMode" StoredValue="ConditionBuilder">
            <usau1:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="umame:FilterMode, scg:List(x:Object)" />
            </usau1:BackupSlot.BackupValues>
          </usau1:BackupSlot>
        </umam:GetEmailListConnections.FilterSelectionBackup>
        <umam:GetEmailListConnections.MailFolderArgument>
          <umamm:MailFolderArgument BrowserFolder="{x:Null}" BrowserFolderId="{x:Null}" ConnectionDescriptor="{x:Null}" ConnectionKey="{x:Null}" ManualEntryFolder="[SubfolderPath]" SelectionMode="EnterPath">
            <umamm:MailFolderArgument.Backup>
              <usau1:BackupSlot x:TypeArguments="umame:ItemSelectionMode" x:Name="__ReferenceID0" StoredValue="EnterPath">
                <usau1:BackupSlot.BackupValues>
                  <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                    <InArgument x:TypeArguments="x:String">Invoices/Other</InArgument>
                    <x:String>AQMkADAwATM0MDAAMi04NjExAC05MGQ3LTAwAi0wMAoALgAAA3sRJ5omrixBnqEsIF0nmiQBALNCgC82eXkATZ2UhRTiXsBqAAACODwAAAA=</x:String>
                  </scg:List>
                </usau1:BackupSlot.BackupValues>
              </usau1:BackupSlot>
            </umamm:MailFolderArgument.Backup>
          </umamm:MailFolderArgument>
        </umam:GetEmailListConnections.MailFolderArgument>
        <umam:GetEmailListConnections.MailboxBackup>
          <usau1:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" StoredValue="NoMailbox">
            <usau1:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
            </usau1:BackupSlot.BackupValues>
          </usau1:BackupSlot>
        </umam:GetEmailListConnections.MailboxBackup>
      </umam:GetEmailListConnections>
      <uga:ReadRangeConnections x:TypeArguments="sd1:DataTable3" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ManualEntrySpreadsheetId="{x:Null}" RangeInformation="{x:Null}" Spreadsheet="{x:Null}" TemplateBrowserItemFriendlyName="{x:Null}" TemplateBrowserItemId="{x:Null}" AuthScopesInvalid="False" BrowserItemFriendlyName="Invoice Details (răspunsuri)" BrowserItemId="1_pACgFePtZbuYAwPdKuB3X8HpknLkYP0ZppRggEWAEk" ConnectionId="f3ab6d66-d2fe-4df9-b57c-ec1dbdfdcb7f" DisplayName="Read Range" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ReadRangeConnections`1_1" ItemSelectionMode="Browse" Range="'Răspunsuri la formular 1'" ReadAs="Values" Result="[Results]" UseConnectionService="True" WorkingWithTemplateSpreadsheet="False">
        <uga:ReadRangeConnections.ColumnNames>
          <x:Array Type="x:String">
            <x:String>Marcaj de timp</x:String>
            <x:String>Vendor Name</x:String>
            <x:String>Invoice Number</x:String>
            <x:String>Invoice Date</x:String>
            <x:String>Due Date</x:String>
            <x:String>Vendor Address</x:String>
            <x:String>Billing Address</x:String>
            <x:String>Shipping Address</x:String>
            <x:String>Ordered Items</x:String>
            <x:String>Total Amount</x:String>
            <x:String>VAT</x:String>
          </x:Array>
        </uga:ReadRangeConnections.ColumnNames>
        <uga:ReadRangeConnections.FileIdBackup>
          <usau2:BackupSlot x:TypeArguments="ugade:EDriveItemMode" x:Name="__ReferenceID1" StoredValue="Browse">
            <usau2:BackupSlot.BackupValues>
              <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
            </usau2:BackupSlot.BackupValues>
          </usau2:BackupSlot>
        </uga:ReadRangeConnections.FileIdBackup>
        <uga:ReadRangeConnections.Item>
          <ugam:DriveItemArgument Backup="{x:Reference __ReferenceID1}" ConnectionDescriptor="{x:Null}" ConnectionKey="{x:Null}" Existing="{x:Null}" FullPath="{x:Null}" IdOrUrl="{x:Null}" ParentId="{x:Null}" ParentIdFriendlyName="{x:Null}" RelativePath="{x:Null}" BrowserId="1_pACgFePtZbuYAwPdKuB3X8HpknLkYP0ZppRggEWAEk" FriendlyName="Invoice Details (răspunsuri)" FullPathHint="My Drive/Invoice Details (răspunsuri)" InputMode="Browse">
            <ugam:DriveItemArgument.ParentIdFullPathHint>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ugam:DriveItemArgument.ParentIdFullPathHint>
          </ugam:DriveItemArgument>
        </uga:ReadRangeConnections.Item>
        <uga:ReadRangeConnections.RangeMetadata>
          <ugsm:RangeMetadataSlim ColumnStart="1" RangeType="Range" />
        </uga:ReadRangeConnections.RangeMetadata>
      </uga:ReadRangeConnections>
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[folderExists AND EmailsList(0).Headers(&quot;Message-ID&quot;).Equals(Emails(0).Headers(&quot;Message-ID&quot;)) AND Results(Results.Rows.Count-1)(&quot;Vendor Name&quot;).ToString().Equals( in_strVendorName )]" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
    </Sequence>
  </Sequence>
</Activity>